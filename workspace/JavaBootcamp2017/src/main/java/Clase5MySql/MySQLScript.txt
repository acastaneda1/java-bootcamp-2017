
********** Base de Datos High_school***********

-------------------------------------------------
*						*
*		Student Table			*			
*						*
-------------------------------------------------

CREATE TABLE `high_school`.`student` (
`id_student` INT NOT NULL AUTO_INCREMENT ,
`first_name` VARCHAR(25) NOT NULL , 
`last_name` VARCHAR(25) NOT NULL , 
`registration_number` INT(10) NOT NULL , 
`date_of_birth` DATE NOT NULL , 
PRIMARY KEY (`id_student`)) ENGINE = InnoDB;


INSERT INTO `student` (`first_name`, `last_name`, `registration_number`, `date_of_birth`) VALUES 
('Juan ', 'Perez', '1234567', '1990-04-02'), 
('Jorge', 'Ramirez', '4562344', '1960-09-30'), 
('Jeronimo', 'Peñalosa', '3216544', '1980-04-02'),
('Kenia', 'Vivas', '19901302', '1990-03-05'), 
('Veronica', 'Alvear', '1980235', '1980-12-12'), 
('Alejandra', 'Munevar', '19961208', '1996-12-08'), 
('Johana', 'Campuzano', '19901552', '1990-12-08'), 
('Neli', 'Gomez', '196000', '1960-10-10'), 
('Juan', 'Manuel', '7898761', '1987-12-08'), 
('Alejandro', 'Gomez', '145698', '1990-05-13'), 
('Veronica', 'Espinoza', '5555667', '1995-11-12'), 
('Nala', 'Castellanos', '19882312', '1990-07-07'), 
('Sophia', 'Pinares', '19902302', '1988-05-05');


-------------------------------------------------
*						*
*		Teacher Table			*			
*						*
-------------------------------------------------

CREATE TABLE `high_school`.`teacher` (
`first_name` VARCHAR(25) NOT NULL , 
`last_name` VARCHAR(25) NOT NULL , 
`date_of_birth` DATE NOT NULL , 
`id_teacher` INT(10) NOT NULL AUTO_INCREMENT ,
PRIMARY KEY (`id_teacher`)) ENGINE = InnoDB;

INSERT INTO `teacher` (`first_name`, `last_name`, `date_of_birth`) VALUES 
('Rodrigo', 'Casale', '1988-12-31'), 
('Francisco', 'Corredor', '1952-03-09'), 
('Rafael', 'Pehna', '1932-09-09');


-------------------------------------------------
*						*
*		Course Table			*			
*						*
-------------------------------------------------

CREATE TABLE `high_school`.`course` ( 
`name` VARCHAR(25) NOT NULL , 
`assigned_teacher` INT(10) NOT NULL , 
`hours_per_week` INT NOT NULL ,  
`id_course` INT NOT NULL AUTO_INCREMENT  , 
PRIMARY KEY (`id_course`), 
INDEX (`assigned_teacher`)) ENGINE = InnoDB;

ALTER TABLE `high_school`.`course` 
	ADD CONSTRAINT `course_ibfk_1` FOREIGN KEY (`assigned_teacher`) REFERENCES `teacher` (`id_teacher`);

INSERT INTO `course` (`name`, `assigned_teacher`, `hours_per_week`) VALUES 
('Java Bootcamp', '1', '10'), 
('Electronica de potencia', '2', '50'), 
('Digitales I', '3', '40');


-------------------------------------------------
*						*
*		Schedule Time Table		*			
*						*
-------------------------------------------------

CREATE TABLE `high_school`.`schedule_time` ( 
`id_schedule` INT NOT NULL AUTO_INCREMENT , 
`day` VARCHAR(15) NOT NULL , 
`from_hour` TIME  NOT NULL ,  
`to_hour` TIME  NOT NULL , 
`course` INT NOT NULL, 
PRIMARY KEY (`id_schedule`), 
INDEX (`course`)) ENGINE = InnoDB;

ALTER TABLE `high_school`.`schedule_time` 
	ADD CONSTRAINT `schedule_time_ibfk_1` FOREIGN KEY (`course`) REFERENCES `course` (`id_course`);

INSERT INTO `schedule_time` ( `day`, `from_hour`, `to_hour`, `course`) VALUES 
('Martes', '13:00:00', '15:30:00', '1'),
('Lunes', '08:00:00', '12:00:00', '1'),
('Miercoles', '09:00:00', '13:00:00', '2'),
('Miercoles', '14:00:00', '20:00:00', '3'),
('Viernes', '07:00:00', '10:00:00', '2');

-------------------------------------------------
*						*
*		Grades Table			*			
*						*
-------------------------------------------------

CREATE TABLE `high_school`.`grades` ( 
`id_grade` INT(10) NOT NULL AUTO_INCREMENT , 
`student` INT(10) NOT NULL , 
`course` INT(10) NOT NULL , 
`partial_note1` INT DEFAULT NULL , 
`partial_note2` INT DEFAULT NULL , 
`partial_note3` INT DEFAULT NULL , 
`final_exam` INT DEFAULT NULL , 
PRIMARY KEY (`id_grade`),
INDEX (`student`), 
INDEX (`course`)) ENGINE = InnoDB;

ALTER TABLE `high_school`.`grades` 
	ADD CONSTRAINT `grades_ibfk_2` FOREIGN KEY (`course`) REFERENCES `course` (`id_course`);
ALTER TABLE `high_school`.`grades` 
	ADD CONSTRAINT `grades_ibfk_1` FOREIGN KEY (`student`) REFERENCES `student` (`id_student`);

INSERT INTO `grades` ( `student`, `course`, `partial_note1`, `partial_note2`, `partial_note3`, `final_exam`) VALUES 
('1', '1', '10', '10', '9', '9'), 
('2', '1', '8', '8', '8', '8'),
('3', '1', '9', '8', '8', '8'), 
('4', '1', '9', '9', '7', '8'), 
('6', '1', '8', '7', '7', '7'), 
('6', '1', '8', '5', '5', '8'), 
('7', '1', '3', '2', '5', '8'), 
('8', '1', '8', '8', '8', '8'),
('9', '1', '8', '8', '8', '8'),
('10', '1', '8', '2', '3', '4'),
('11', '1', '2', '5', '8', '8'),
('12', '1', '9', '9', '1', '8'),
('13', '1', '8', '8', '10', '10'),
('1', '2', '10', '10', '9', '9'), 
('2', '2', '8', '8', '8', '8'), 
('3', '2', '9', '8', '8', '8'), 
('4', '2', '9', '9', '7', '8'), 
('5', '2', '8', '7', '7', '7'), 
('6', '2', '8', '5', '5', '8'), 
('7', '2', '3', '2', '5', '8'), 
('8', '2', '8', '8', '8', '8'),
('9', '2', '8', '8', '8', '8'),
('13', '2', '8', '2', '3', '4'),
('1', '3', '2', '5', '8', '8'),
('2', '3', '9', '9', '1', '8'),
('4', '3', '8', '8', '10', '10'), 
('5', '3', '10', '10', '9', '9'), 
('6', '3', '8', '8', '8', '8'), 
('7', '3', '9', '8', '8', '8'), 
('8', '3', '9', '9', '7', '8'), 
('9', '3', '8', '7', '7', '7'), 
('10', '3', '8', '5', '5', '8'), 
('11', '3', '3', '2', '5', '8');

____________________________________________________________________________________________________

Showing a list students and teachers for a given course. The output format should be:

 Course: <course-name>
 Teacher: <last-name>, <first-name>
 Students:
   <last-name>, <first-name> (ordered by alphabetically by last name)

Query:

SELECT `c`.name AS course , 
	CONCAT(`s`.last_name, ' ', `s`.first_name) AS student,
	CONCAT(`t`.last_name, ' ', `t`.first_name) AS teacher
FROM `course` AS `c` 
	INNER JOIN `teacher` AS `t` ON (`c`.assigned_teacher = `t`.id_teacher) 
	INNER JOIN `grades` AS `g` ON (`c`.id_course = `g`.course) 
	INNER JOIN `student` AS `s` ON (`g`.student = `s`.id_student) 
ORDER BY `s`.last_name ASC

____________________________________________________________________________________________________

Percentage of students that passed a given course.

Query:

SELECT  `c`.name AS course,  
	CONCAT(ROUND(SUM(IF(`g`.final_exam > 6,1,0))*100/COUNT(`g`.student)), ' %') AS 'Percentage of students that passed the course' 
FROM `grades` AS `g` 
	INNER JOIN `course` AS `c` ON (`g`.course = `c`.id_course)
WHERE c.id_course = '3'


Percentage of students that failed a given course.

SELECT  `c`.name AS course,  
	CONCAT(ROUND(SUM(IF(`g`.final_exam < 6,1,0))*100/COUNT(`g`.student)), ' %') AS 'Percentage of students that failed the course' 
FROM `grades` AS `g` 
	INNER JOIN `course` AS `c` ON (`g`.course = `c`.id_course)
WHERE c.id_course = '3'

_____________________________________________________________________________________________________

For a given teacher, list the timeline for each course that he is assigned to (ordered by date), and the course name. The format should be:

 Teacher: <last-name>, <first-name>
 Schedule:
   Monday 09:00 - 11:00: <course-name>
   Monday 15:00 - 17:30: <course-name>
   Friday 08:45 - 10:40: <course-name>


SELECT  CONCAT(`t`.first_name, ' ', `t`.last_name) AS teacher,
	CONCAT(`s`.day,' ', `s`.from, ' - ', `s`.to, ': ', `c`.name) AS schedule
FROM `course` AS `c` 
	INNER JOIN `teacher` AS `t` ON (`c`.assigned_teacher = `t`.id_teacher) 
	INNER JOIN `schedule_time` AS `s` ON (`c`.id_course = `s`.course) 
WHERE t.id_teacher = '3'
ORDER BY `s`.course
